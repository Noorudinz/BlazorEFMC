@using BethanysPieShopHRM.Server.Services;
@using BethanysPieShopHRM.Shared;
@using Syncfusion.Blazor.Buttons;

@if (ShowDialog)
{
    <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="titleLabel">Edit User Role</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>


                <div class="modal-body">
                    <div class="row alert @StatusClass">
                        <p>@ErrorMsg</p>
                    </div>


                    <EditForm Model="@userRoles" OnValidSubmit="@HandleValidSubmit">

                      
                        <input type="hidden" value="@userRoles.UserId" />

                        <div class="form-group">
                            <label for="Name">Role names: </label>                            
                            <InputText id="Name" class="form-control" @bind-Value="@userRoles.UserName" disabled="false"></InputText>                            
                        </div>

                        <div class="form-group">
                            <label for="Email">Role Email: </label>
                            <InputText id="Email" class="form-control" @bind-Value="@userRoles.UserEmail" disabled="false"></InputText>                        
                        </div>

                        <div class="form-group">
                            @foreach (var roles in userRoles.RolesSelections)
                            {
                                <SfCheckBox @bind-Checked="roles.IsSelected" Label="@roles.RoleName"></SfCheckBox>
                                <br />
                            }
                        </div>

                        <button type="submit" class="btn btn-primary">Save role</button>
                        <a class="btn btn-outline-primary" @onclick="@Close">Close</a>
                    </EditForm>

                </div>
            </div>
        </div>
    </div>}

@code {

    public bool ShowDialog { get; set; }
    public bool ShowDeleteDialog { get; set; } = false;
    public string StatusClass { get; set; } = string.Empty;
    public string ErrorMsg { get; set; } = string.Empty;

    public UserRoleVM userRoles { get; set; }

    [Parameter]
    public EventCallback<bool> CloseEventCallback { get; set; }

    [Inject]
    public IAuthService AuthDataService { get; set; }

    public async void ShowEdit(string Id)
    {

        userRoles = (await AuthDataService.GetUsersById(Id));

        // RoleList = (await RolesDataService.GetAllRoles()).ToList();
        ShowDialog = true;
        StateHasChanged();

    }

    private void ResetDialog()
    {
        userRoles = new UserRoleVM();
    }

    public void Close()
    {
        ShowDialog = false;
        ShowDeleteDialog = false;
        StateHasChanged();
    }

    protected async Task HandleValidSubmit()
    {
        //var response = await AuthDataService.AddRoleOrEdit(role);

        //if (response.IsSuccess)
        //{
        //    ShowDialog = false;

        //    await CloseEventCallback.InvokeAsync(true);
        //    StateHasChanged();
        //}
        //else
        //{
        //    StatusClass = "alert-danger";
        //    ErrorMsg = string.Join(",", response.Errors.ToArray());

        //}6382985870

    }


}
