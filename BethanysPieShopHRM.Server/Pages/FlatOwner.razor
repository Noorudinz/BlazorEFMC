@page "/flatowners"
@attribute [Authorize]
@using BethanysPieShopHRM.Server.Services;
@using BethanysPieShopHRM.Server.Repository;
@using BethanysPieShopHRM.Server.Implementation;
@using BethanysPieShopHRM.Shared;
@using Syncfusion.Blazor.Notifications;
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons


<SfDialog Width="250px" ShowCloseIcon="true" IsModal="true" @bind-Visible="@IsVisible">
        <DialogTemplates>
            <Header> Message </Header>
            <Content>
                <input type="hidden" value="@FlatId" />
                <p class="font-weight-bold">Are you sure want to delete ?</p>
                <br />
                <span class="card-text">FlatNo : @FlatNo</span><br />
                <span class="card-text">Name : @Name</span>
            </Content>
        </DialogTemplates>
        <DialogButtons>
            <DialogButton CssClass="btn btn-danger" Content="OK" IsPrimary="true" OnClick="@DeleteConfirm" />
            <DialogButton Content="Cancel" OnClick="@CloseDialog" />
        </DialogButtons>
    </SfDialog>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" AllowPaging="true">
                <GridPageSettings PageSize="10" PageCount="5" PageSizes="@pagerDropdown">
                </GridPageSettings>
                <GridEditSettings AllowDeleting="true" AllowEditing="true"></GridEditSettings>
                <GridEvents CommandClicked="OnCommandClicked" TValue="BethanysPieShopHRM.Shared.FlatOwner"></GridEvents>
                <GridColumns>
                    <GridColumn Field=@nameof(BethanysPieShopHRM.Shared.FlatOwner.FlatId) HeaderText="Id" IsPrimaryKey="true" Visible="false"></GridColumn>
                    <GridColumn Field=@nameof(BethanysPieShopHRM.Shared.FlatOwner.FlatNo) HeaderText="FlatNo" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(BethanysPieShopHRM.Shared.FlatOwner.FirstName) HeaderText="FirstName" Width="140"></GridColumn>
                    <GridColumn Field=@nameof(BethanysPieShopHRM.Shared.FlatOwner.MobileNumber) HeaderText="Mobile" Width="140"></GridColumn>
                    <GridColumn HeaderText="Manage Records" Width="150">
                        <GridCommandColumns>
                            <GridCommandColumn Type="CommandButtonType.Edit" ButtonOption="@(new CommandButtonOptions() { IconCss = "e-icons e-edit", CssClass = "e-flat" })"></GridCommandColumn>
                            <GridCommandColumn Type="CommandButtonType.Delete" ButtonOption="@(new CommandButtonOptions() { IconCss = "e-icons e-delete", CssClass = "e-flat" })"></GridCommandColumn>
                        </GridCommandColumns>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
    
</div>

<a href="/editFlatOwner" class="btn btn-dark table-btn quick-add-btn">&nbsp;&nbsp;+&nbsp;&nbsp;</a>

    @code {


        private int FlatId { get; set; }
        private string FlatNo { get; set; }
        private string Name { get; set; }

        string[] pagerDropdown = new string[] { "All", "5", "10", "15", "20" };

        private bool IsVisible { get; set; } = false;


        [Inject]
        public IFlatOwner FlatOwnerService { get; set; }

        public List<BethanysPieShopHRM.Shared.FlatOwner> GridData { get; set; }

        protected override async Task OnInitializedAsync()
        {
            GridData = (await FlatOwnerService.GetAllFlatOwners()).ToList();
        }

        [Inject]
        public NavigationManager NavigationManager { get; set; }


        private void CloseDialog()
        {
            this.IsVisible = false;
        }

        private async void DeleteConfirm()
        {
            if(FlatNo != null)
            {
                await FlatOwnerService.DeleteFlatOwner(FlatNo);
                this.IsVisible = false;
            }

            StateHasChanged();
        }

        public void OnCommandClicked(CommandClickEventArgs<BethanysPieShopHRM.Shared.FlatOwner> args)
        {
            if(args.RowData != null)
            {
                if (args.CommandColumn.Type == CommandButtonType.Edit)
                {
                    NavigationManager.NavigateTo("/editFlatOwner/" + args.RowData.FlatId);
                }

                if (args.CommandColumn.Type == CommandButtonType.Delete)
                {
                    IsVisible = true;
                    FlatId = args.RowData.FlatId;
                    FlatNo = args.RowData.FlatNo;
                    Name = args.RowData.FirstName;
                }
            }
        }

    }